#include "Math3D.h"

void Math3D::registerMembers(const std::string& namespace_, lua_State* luaState)
{
	luabridge::getGlobalNamespace(luaState)
		.beginNamespace(namespace_.c_str())
		.beginClass<Vector2>("Vector2")
		.addConstructor<void(*)(const float&, const float&)>()
		.addFunction("length", &Vector2::length)
		.addFunction("dot", &Vector2::dot)
		.addFunction("cross", &Vector2::cross)
		.addFunction("normalised", &Vector2::normalised)
		.addFunction("inversed", &Vector2::inversed)
		.addFunction("lerp", &Vector2::lerp)
		.addFunction("getX", &Vector2::getX)
		.addFunction("getY", &Vector2::getY)
		.addFunction("setX", &Vector2::setX)
		.addFunction("setY", &Vector2::setY)
		.endClass()

		.beginClass<Vector3>("Vector3")
		.addConstructor<void(*)(const float&, const float&, const float&)>()
		.addFunction("length", &Vector3::length)
		.addFunction("squareLength", &Vector3::squareLength)
		.addFunction("dot", &Vector3::dot)
		.addFunction("cross", &Vector3::cross)
		.addFunction("normalised", &Vector3::normalised)
		.addFunction("inversed", &Vector3::inversed)
		.addFunction("reflect", &Vector3::reflect)
		.addFunction("lerp", &Vector3::lerp)
		.addFunction("absolute", &Vector3::absolute)
		.addFunction("getX", &Vector3::getX)
		.addFunction("getY", &Vector3::getY)
		.addFunction("getZ", &Vector3::getZ)
		.addFunction("setX", &Vector3::setX)
		.addFunction("setY", &Vector3::setY)
		.addFunction("setZ", &Vector3::setZ)
		.endClass()

		.beginClass<Vector4>("Vector4")
		.addConstructor<void(*)(const float&, const float&, const float&, const float&)>()
		.addFunction("length", &Vector4::length)
		.addFunction("normalised", &Vector4::normalised)
		.addFunction("getX", &Vector4::getX)
		.addFunction("getY", &Vector4::getY)
		.addFunction("getZ", &Vector4::getZ)
		.addFunction("getW", &Vector4::getW)
		.addFunction("setX", &Vector4::setX)
		.addFunction("setY", &Vector4::setY)
		.addFunction("setZ", &Vector4::setZ)
		.addFunction("setW", &Vector4::setW)
		.endClass()

		.beginClass<Quaternion>("Quaternion")
		.addConstructor<void(*)(const float&, const float&, const float&, const float&)>()
		.addConstructor<void(*)(const Vector3&, const float&)>()
		.addFunction("length", &Quaternion::length)
		.addFunction("normalised", &Quaternion::normalised)
		.addFunction("conjugate", &Quaternion::conjugate)
		.addFunction("dot", &Quaternion::dot)
		.addFunction("nlerp", &Quaternion::nlerp)
		.addFunction("slerp", &Quaternion::slerp)
		.addFunction("getX", &Quaternion::getX)
		.addFunction("getY", &Quaternion::getY)
		.addFunction("getZ", &Quaternion::getZ)
		.addFunction("getW", &Quaternion::getW)
		.addFunction("setX", &Quaternion::setX)
		.addFunction("setY", &Quaternion::setY)
		.addFunction("setZ", &Quaternion::setZ)
		.addFunction("setW", &Quaternion::setW)
		.endClass()

		.endNamespace();
}